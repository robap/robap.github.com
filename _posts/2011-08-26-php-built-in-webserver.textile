---
layout: post
title: PHP Built-in Web Server
---

When it comes to setting up your PHP dev environment, you know the drill. Google for a LAMP/WAMP tutorial and then run through the installation steps: apache, php, mysql. Then, after setting up/checking out your project's source code, you have to configure an apache vhost file. Well the day is getting close when we can cross the apache step off the list. I recently came across "Built-in web server":http://php.net/manual/en/features.commandline.webserver.php and took it for a test drive.

h4. Install

According to the "built-in web server documentation":http://php.net/manual/en/features.commandline.webserver.php, the built-in web server is part of PHP 5.4 which is not yet stable. We can still download, build, and try it out though. On Ubuntu with an existing PHP install, the alpha version can be built and used along side Ubuntu's php package. 

{% highlight bash %}
cd ~
mkdir apps
mkdir apps/php
cd apps/php
wget http://downloads.php.net/stas/php-5.4.0alpha3.tar.bz2
tar -jxvf php-5.4.0alpha3.tar.bz2
cd php-5.4.0alpha3
./configure
(For me, configure complained about missing libxml2)
sudo apt-get install libxml2-dev
./configure
make
(DO NOT do make install!)
{% endhighlight %}

At this point, I'm not concerned about the various php configure options. You can test the build php binary:

{% highlight bash %}
~/apps/php/php-5.4.0alpha3/sapi/cli/php -v
PHP 5.4.0alpha3 (cli) (built: Aug 26 2011 19:16:20) 
Copyright (c) 1997-2011 The PHP Group
Zend Engine v2.4.0, Copyright (c) 1998-2011 Zend Technologies
{% endhighlight %}

h4. Test out an application

Let's try the quickstart app from Zend Framework. I'll assume you have Zend Framework and Zend Tool already installed.

{% highlight bash %}
cd (into your dev directory)
zf create project quickstart
cd quickstart/library
ln -s /usr/share/php/libzend-framework-php/Zend .
cd ..
~/apps/php/php-5.4.0alpha3/sapi/cli/php -S localhost:8000 public/index.php
{% endhighlight %}

Now open your browser to "http://localhost:8000":http://localhost:8000.

If you see the entry page to your application, it is working.

h4. Final Steps

Something is still missing. We need to be able to serve up static files. If using apache, this is usually accomplished by using a .htaccess file. "Ralph Shindler discusses some routing options here":http://news.php.net/php.internals/53870. We can tweak Ralph's suggestion a bit. First, create a .routing.php file in the public directory and place the following code inside:

{% highlight php %}
<?php
//file: quickstart/public/.routing.php
if(file_exists($_SERVER['SCRIPT_FILENAME'])) {
  return false; // serve the requested resource as-is.
} else {
  include_once 'index.php';
}
{% endhighlight %}

Now, restart the web server:

{% highlight bash %}
~/apps/php/php-5.4.0alpha3/sapi/cli/php -S localhost:8000 -t ./public ./public/.routing.php
{% endhighlight %}

h4. Wrap Up

Keep in mind, the built-in web server is for development only. It is not something you should consider using for production. I am a bit disappointed that the routing isn't simply part of the built-in web server. However, I look forward to the release of 5.4.